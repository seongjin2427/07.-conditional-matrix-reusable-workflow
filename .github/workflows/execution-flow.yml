name: Website Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        # 특정 Step을 식별하기 위해 id를 설정합니다.
        id: cache
        uses: actions/cache@v3
        with:
          # 패키지를 설치하게 되면, 자동으로 생성되는 node_modules를 캐싱할 경로로 지정합니다.
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        # id: cache Step의 outputs 값인 cache-hit가 'true'가 아니라면 해당 Step을 실행합니다.
        # = 의존성을 설치하기 전, 캐시 파일을 사용한다면, 해당 Step을 실행하지 않습니다.
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        # 특정 Step을 식별하기 위해 id를 설정합니다.
        id: cache
        uses: actions/cache@v3
        with:
          # 패키지를 설치하게 되면, 자동으로 생성되는 node_modules를 캐싱할 경로로 지정합니다.
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        # id: cache Step의 outputs 값인 cache-hit가 'true'가 아니라면 해당 Step을 실행합니다.
        # = 의존성을 설치하기 전, 캐시 파일을 사용한다면, 해당 Step을 실행하지 않습니다.
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        # 특정 Step을 식별하기 위해 id를 설정합니다.
        id: cache
        uses: actions/cache@v3
        with:
          # 패키지를 설치하게 되면, 자동으로 생성되는 node_modules를 캐싱할 경로로 지정합니다.
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        # id: cache Step의 outputs 값인 cache-hit가 'true'가 아니라면 해당 Step을 실행합니다.
        # = 의존성을 설치하기 전, 캐시 파일을 사용한다면, 해당 Step을 실행하지 않습니다.
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
  report:
    needs: [lint, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "Something when wrong"
          echo "${{ toJSON(github) }}"